buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "gt"
            url = "https://gregtech.overminddl1.com/"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            url = "https://jitpack.io"
	    }
    }
    dependencies {
        classpath 'com.github.GTNewHorizons:ForgeGradle:1.2.4'
    }
}

apply plugin: 'scala'
apply plugin: 'forge'
apply plugin: 'idea'

ext.buildProps = file "build.properties"

version = "GTNH"
if (System.getenv("BUILD_NUMBER") != null) {
	version = "${System.getenv("BUILD_NUMBER")}"
}
if (System.getenv("DRONE_BUILD_NUMBER") != null) {
	version = "${System.getenv("DRONE_BUILD_NUMBER")}"
}

buildProps.withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

version = "${config.version.minecraft}-${config.version.mod.major}.${config.version.mod.minor}.${config.version.mod.revis}-" + getBuildNumber()
group = "extracells"
archivesBaseName = "ExtraCells"

sourceCompatibility = targetCompatibility = "1.8" // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

logger.lifecycle "$archivesBaseName-$version"
logger.lifecycle "" + version

minecraft {
    version = "${config.version.minecraft}-${config.version.forge}-${config.version.minecraft}"
    runDir = "../../MinecraftDebug/run_client"
}

repositories {
    maven {
        name 'Mobius Repo'
        url "http://mobiusstrip.eu/maven"
    }
	maven {
		name 'Open Computers'
		url "https://maven.cil.li/"
	}
    maven {
        name = "Forestry and IC2 repo"
        url = "https://maven.ic2.player.to/"
    }
	maven {
        name = 'IGW'
        url = "https://maven.k-4u.nl/"
    }
    ivy {
        name "BuildCraft"
        artifactPattern "http://www.mod-buildcraft.com/releases/BuildCraft/[revision]/[module]-[revision]-[classifier].[ext]"
    }
	maven {
		name 'GT Maven'
		url "https://gregtech.overminddl1.com/"
	}
	maven {
		name 'GTNH Maven'
		url "http://jenkins.usrv.eu:8081/nexus/content/repositories/releases/"
	}
	ivy {
		artifactPattern "http://downloads.gtnewhorizons.com/Mods_for_Jenkins/[module]_[revision].[ext]"
	}
    ivy {
        artifactPattern "http://downloads.gtnewhorizons.com/Mods_for_Jenkins/[module]-[revision].[ext]"
    }
    maven {
        url = "https://jitpack.io"
    }
    maven {
        url "https://cursemaven.com"
    }
}

configurations {
	provided
	embedded
	compile.extendsFrom embedded
}

dependencies {
    provided name: 'CoFHCore', version: config.cofhcore.version, ext: 'jar'
    implementation "com.github.GTNewHorizons:NotEnoughItems:master-SNAPSHOT:dev"
    compile("com.github.GTNewHorizons:Applied-Energistics-2-Unofficial:master-SNAPSHOT:dev") {
        setChanging(true)
        transitive = false
    }
	implementation ('com.github.GTNewHorizons:waila:master-SNAPSHOT'){
        transitive = false
	}
	compile "li.cil.oc:OpenComputers:${config.version.oc}:dev"
	compile "igwmod:IGW-Mod-${config.version.minecraft}:${config.version.igw}:userdev"
    compile name: "buildcraft", version: "${config.version.bc}", classifier: "dev", ext: 'jar'
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.lang'
        include '**/*.info'
        include '**/*.properties'

        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        include '**/*.lang'
        include '**/*.info'
        include '**/*.properties'

        expand 'version': "${config.version.mod.major}.${config.version.mod.minor}.${config.version.mod.revis}", 'mcversion': project.minecraft.version
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    from sourceSets.main.scala
    from sourceSets.main.java
    classifier "deobf"
}

artifacts {
    archives deobfJar
}

def static getBuildNumber() {
    if (System.getenv("BUILD_NUMBER") != null) {
        return "${System.getenv("BUILD_NUMBER")}"
    }
    else if (System.getenv("DRONE_BUILD_NUMBER") != null) {
        return "${System.getenv("DRONE_BUILD_NUMBER")}"
    }
    return "GTNH"
}

idea {
    module {
        outputDir = file('build/classes/main')
    }
}
